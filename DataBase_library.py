"""
Определите понятие «злостный читатель». Предложите алгоритм для поиска самого злостного читателя библиотеки.
На любом языке программирования опишите алгоритм поиска такого читателя. Алгоритм должен основываться на модели данных,
которую вы описали в задании 1.

В задании 1, я прописала модель как таблицы, но для реализации алгоритма поиска в Python использую двумерные списки
и словарь. В словаре будут храниться имена и фамилии читателей среди которых будет произведен поиск, а двумерный список
основан на модели данных, описанной в задании 1. Для решения был использован алгоритм линейного поиска.
"""
"""
Эта часть кода нужна для ввода данных вручную
readers = {}
base = []
base1 = []
rdrs1 = []
flag = "да"
keys = []
num_read = 0
while flag == "да":
    NameBook = str(input("Введите название книги = "))
    NameAuthor = str(input("Введите ФИО автора = "))
    NamePublish = str(input("Введите название издательства = "))
    Year = int(input("Введите год издания = "))
    Count = int(input("Введите количество экземпляров = "))
    rdrs = []  # Список взявших книгу

    base1.append(NameBook)
    base1.append(NameAuthor)
    base1.append(NamePublish)
    base1.append(Year)
    base1.append(Count)
    base1.append(num_read)
    base1.append(rdrs)
    base.append(base1)

    flag = str(input("Продолжить ввод? да/нет "))
    base1 = []
print(base)

flag = "да"

while flag == "да":
    name_book = str(input("Введите название книги, которую берет читатель = "))
    Name = str(input("Введите имя и фамилию читателя, через пробел в формате (Фамилия Имя) = "))
    Borrow  = str(input("Введите дату выдачи(в формате дд/мм/гггг) = "))

    rdrs1.append(Name)
    rdrs1.append(Borrow)

    for i in range(len(base)):
        if base[i][0] == name_book:
            if base[i][4] != 0:
                base[i][5] += 1
                base[i][6].append(rdrs1)
                base[i][4] -= 1
                keys.append(Name)

            else:
                print("Книги закончились, выберите другую!")
    flag = str(input("Продолжить ввод? да/нет "))
    rdrs1 = []"""


keys = ['Иванов Петр', 'Кошкина Ксения', 'Сидоров Иван', 'Снегирев Константин', 'Петров Борис', 'Букина Мария']

base = [['Белая гвардия', 'Булгаков М.А.', 'Москва', '1977', 2, 3,[['Иванов Петр', '2.2.2020', '3.3.2020'],
                                                               ['Иванов Петр', '4.1.2020', '4.3.2020'],
                                                               ['Букина Мария', '1.3.2021', '6.5.2021']]],
        ['Идиот', 'Достоевский Ф.М.', 'Питер', '2007', 20, 3, [['Иванов Петр', '3.11.2021', '9.11.2021'],
                                                         ['Букина Мария', '25.4.2021', '3.5.2021'],
                                                         ['Снегирев Константин', '15.1.2021', '30.1.2021'],
                                                         ['Петров Борис', '8.6.2021', '14.6.2021']]],
        ['Преступление и наказание', 'Достоевский Ф.М.', 'Лань', '1984', 5, 1, ['Иванов Петр', '7.5.2021', '20.5.2021']],
        ['Басни', 'Крылов И.А.', 'Аврора', '2007', 17, 1, ['Петров Борис', '3.2.2021', '22.2.2021']],
        ['Стихотворения и рассказы', 'Пушкин А.С.', 'Алгоритм', '1999', 11, 1, ['Снегирев Константин', '7.3.2021', '10.3.2021']],
        ['Война и мир', 'Толстой Л.Н.', 'Питер', '2005', 6, 2, [['Кошкина Ксения', '7.1.2021', '14.4.2021'],
                                                          ['Кошкина Ксения', '8.2.2021', '9.3.2021']]],
        ['Гостья из будущего', 'Булычев К.', 'Пресс', '2008', 9, 1, ['Снегирев Константин', '10.1.2021', '17.4.2021']]]

readers = {'Иванов Петр': 0,'Кошкина Ксения': 0,
           'Сидоров Иван': 0, 'Снегирев Константин': 0,
           'Петров Борис': 0, 'Букина Мария': 0}

"""for item in base:
    print(item)"""

"""readers = dict.fromkeys(keys)
print(readers)"""



#Подсчет количества вхождений имен
for i in range(len(base)):
    for j in range(len(base[i][6])):
        if base[i][5] == 1:
            if base[i][6][0] in readers:
                readers[base[i][6][0]] += 1
                break
        else:
            if base[i][6][j][0] in readers:
                readers[base[i][6][j][0]] += 1


max = 0
top1 = ''

#Определние самого "злостного" читателя
for i  in range(len(keys)):
    if keys[i] in readers:
        if readers[keys[i]] >= max:
            max = readers[keys[i]]
            top1 = keys[i]


print(f'Самый "злостный читатель" = {top1}')






